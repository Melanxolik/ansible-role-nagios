---

- name: GET Nagios
  get_url: url={{ nagiosurl }} dest={{ download_dir }}/{{ nagiossrc }}.tar.gz

- name: Unpack Nagios source files
  shell: cd {{ download_dir }} && tar -xzvf {{ nagiossrc }}.tar.gz creates={{ download_dir }}/{{ nagiossrc }}

- name: ./configure
  shell: cd {{ download_dir }}/{{ nagiossrc }} && ./configure --with-command-group={{ monitoring_command_group }} -with-httpd_conf={{ with_httpd_conf }} --with-nagios-user={{ monitoring_user }} creates={{ download_dir }}/{{ nagiossrc }}/Makefile

- name: Make all
  shell: cd {{ download_dir }}/{{ nagiossrc }} && make all creates={{ download_dir }}/{{ nagiossrc }}/base/nagios

- name: Make install
  shell: cd {{ download_dir }}/{{ nagiossrc }} && make install creates=/usr/local/nagios/bin/nagios

- name: Make install-config
  shell: cd {{ download_dir }}/{{ nagiossrc }} && make install-config creates=/usr/local/nagios/etc/nagios.cfg

- name: Make install-commandmode
  shell: cd {{ download_dir }}/{{ nagiossrc }} && make install-commandmode creates=/usr/local/nagios/var/rw

- name: Make install-devel
  shell: cd {{ download_dir }}/{{ nagiossrc }} && make install-devel creates=/usr/local/nagios/include/nagios/nagios.h

- name: Make install-webconf
  shell: cd {{ download_dir }}/{{ nagiossrc }} && make install-webconf creates={{ with_httpd_conf }}/nagios.conf
  notify: restart apache

- name: Enable webconf
  command: a2enconf nagios
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'
  notify: restart apache
  tags:
    - nagios_enable_config_apache

- name: Enable cgi mod apache
  apache2_module: name=cgi state=present
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'
  notify: restart apache
  tags:
    - apache_enable_cgi_mod



- name: Make install-init
  shell: cd {{ download_dir }}/{{ nagiossrc }} && make install-init creates=/etc/init.d/nagios
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release != 'xenial'

- name: Set htpasswd for gui users
  htpasswd: path=/usr/local/nagios/etc/htpasswd.users name={{ item.user }} password={{ item.pass }} state=present
  with_items: "{{ nagios_users }}"

- name: Ensure Nagios is started
  service: name=nagios state=started enabled=yes
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release <= '14.04'

- name: copy systemd boot
  copy: src="{{ role_path }}/files/nagios.service" dest="/etc/systemd/system/nagios.service"
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'
  tags:
    - nagios_systemd_service_copy

- name: nagios enable systemd profile
  systemd: name=nagios enabled=yes
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'
  tags:
    - nagios_systemd_enabled

- name: start systemd profile
  systemd: state=restarted name=nagios daemon_reload=yes
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'
  tags:
    - nagios_systemd_start

# - name: Ensure Nagios is started by systemd

